import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from urllib.parse import quote

# 1. –ö–æ–¥—É—î–º–æ URL
base_url = "https://uk.wikipedia.org/wiki/–ù–∞—Å–µ–ª–µ–Ω–Ω—è_–£–∫—Ä–∞—ó–Ω–∏"
encoded_url = quote(base_url, safe=':/')

# 2. –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ç–∞–±–ª–∏—Ü—ñ
tables = pd.read_html(encoded_url)
print(f"–ó–Ω–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü—å: {len(tables)}")

# 3. –ó–Ω–∞—Ö–æ–¥–∏–º–æ —Ç–∞–±–ª–∏—Ü—é –∑ 2019 —Ä–æ–∫–æ–º
target_df = None
for tbl in tables:
    if any("2019" in str(col) for col in tbl.columns):
        target_df = tbl
        break

if target_df is None:
    raise ValueError("–¢–∞–±–ª–∏—Ü—è –∑ 2019 —Ä–æ–∫–æ–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!")

# 4. –ß–∏—Å—Ç–∏–º–æ –Ω–∞–∑–≤–∏ –∫–æ–ª–æ–Ω–æ–∫
target_df.columns = [str(col).strip() for col in target_df.columns]

# 5. –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–æ–ª–æ–Ω–∫—É –∑–∞ 2019 —Ä—ñ–∫
col_2019 = next(col for col in target_df.columns if "2019" in str(col))

# 6. –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –¥–∞–Ω—ñ –≤ —á–∏—Å–ª–æ–≤–∏–π —Ñ–æ—Ä–º–∞—Ç
target_df[col_2019] = (
    target_df[col_2019]
    .astype(str)
    .str.replace(r"\s+", "", regex=True)
    .str.replace("‚Äî", "", regex=False)
    .str.replace(",", ".", regex=False)
    .replace("", np.nan)  # ‚Üê –∑–∞–º—ñ—Å—Ç—å pd.NA
    .astype(float)
)

# 7. –û–±—á–∏—Å–ª—é—î–º–æ —Å–µ—Ä–µ–¥–Ω—î —Ç–∞ –≤—ñ–¥–±–∏—Ä–∞—î–º–æ —Ä–µ–≥—ñ–æ–Ω–∏
mean_2019 = target_df[col_2019].mean()
above_avg = target_df[target_df[col_2019] > mean_2019]["–†–µ–≥—ñ–æ–Ω"].tolist()

# 8. –í–∏–≤—ñ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
print(f"\n–°–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è —É 2019: {mean_2019}")
print("–†–µ–≥—ñ–æ–Ω–∏ –∑ –Ω–∞—Ä–æ–¥–∂—É–≤–∞–Ω—ñ—Å—Ç—é –≤–∏—â–µ —Å–µ—Ä–µ–¥–Ω—å–æ–≥–æ:", above_avg)

# --- üìä –í–Ü–ó–£–ê–õ–Ü–ó–ê–¶–Ü–á ---
# 1. Bar chart
plt.figure(figsize=(10, 6))
plt.bar(target_df["–†–µ–≥—ñ–æ–Ω"], target_df[col_2019], color="skyblue", edgecolor="black")
plt.axhline(mean_2019, color="red", linestyle="--", label=f"–°–µ—Ä–µ–¥–Ω—î: {mean_2019:.2f}")
plt.xticks(rotation=90)
plt.ylabel("–ù–∞—Ä–æ–¥–∂—É–≤–∞–Ω—ñ—Å—Ç—å —É 2019")
plt.title("–ù–∞—Ä–æ–¥–∂—É–≤–∞–Ω—ñ—Å—Ç—å –ø–æ —Ä–µ–≥—ñ–æ–Ω–∞—Ö –£–∫—Ä–∞—ó–Ω–∏ (2019)")
plt.legend()
plt.tight_layout()
plt.show()

# 2. Horizontal bar chart
plt.figure(figsize=(10, 8))
target_df_sorted = target_df.sort_values(col_2019)
plt.barh(target_df_sorted["–†–µ–≥—ñ–æ–Ω"], target_df_sorted[col_2019], color="lightgreen", edgecolor="black")
plt.axvline(mean_2019, color="red", linestyle="--", label=f"–°–µ—Ä–µ–¥–Ω—î: {mean_2019:.2f}")
plt.xlabel("–ù–∞—Ä–æ–¥–∂—É–≤–∞–Ω—ñ—Å—Ç—å —É 2019")
plt.title("–ù–∞—Ä–æ–¥–∂—É–≤–∞–Ω—ñ—Å—Ç—å –ø–æ —Ä–µ–≥—ñ–æ–Ω–∞—Ö –£–∫—Ä–∞—ó–Ω–∏ (2019)")
plt.legend()
plt.tight_layout()
plt.show()

# 3. Pie chart (–≤–∏—â–µ/–Ω–∏–∂—á–µ —Å–µ—Ä–µ–¥–Ω—å–æ–≥–æ)
above_count = len(above_avg)
below_count = len(target_df) - above_count
plt.figure(figsize=(6, 6))
plt.pie([above_count, below_count],
        labels=["–í–∏—â–µ —Å–µ—Ä–µ–¥–Ω—å–æ–≥–æ", "–ù–∏–∂—á–µ —Å–µ—Ä–µ–¥–Ω—å–æ–≥–æ"],
        autopct='%1.1f%%',
        colors=["lightcoral", "lightblue"])
plt.title("–ß–∞—Å—Ç–∫–∞ —Ä–µ–≥—ñ–æ–Ω—ñ–≤ –∑ –Ω–∞—Ä–æ–¥–∂—É–≤–∞–Ω—ñ—Å—Ç—é –≤–∏—â–µ/–Ω–∏–∂—á–µ —Å–µ—Ä–µ–¥–Ω—å–æ–≥–æ (2019)")
plt.show()
